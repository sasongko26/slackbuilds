#!/bin/sh

# Slackware build script for exa

# Copyright 2017 Andrew Clemons, Wellington New Zealand
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=exa
VERSION=${VERSION:-0.7.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION

# cargo can't use vendored git depenencies so force zoneinfo_compiled git
# snapshot to act like any other crate dependency.
# tar.gz of the git commit is manipulated below in the dependecy loop to match
# the patched Cargo.lock
# https://github.com/rust-lang/cargo/pull/3992
# https://github.com/alexcrichton/cargo-vendor/pull/42
patch -p1 < $CWD/vendor.diff

# build offline
# configuration tells cargo to use the configured directory
# for dependencies intead of downloading from crates.io
mkdir .cargo
cat << EOF >> .cargo/config
[source.crates-io]
registry = 'https://github.com/rust-lang/crates.io-index'
replace-with = 'vendored-sources'

[source.vendored-sources]
directory = '$(pwd)/vendor'
EOF

# deps and versions come from Cargo.lock
mkdir vendor
(
  cd vendor

  for dependency in ansi_term=0.8.0 \
                    bitflags=0.9.1 \
                    byteorder=0.4.2 \
                    cmake=0.1.24 \
                    datetime=0.4.4 \
                    gcc=0.3.51 \
                    getopts=0.2.14 \
                    git2=0.6.6 \
                    glob=0.2.11 \
                    idna=0.1.2 \
                    iso8601=0.1.1 \
                    lazy_static=0.2.8 \
                    libc=0.2.24 \
                    libgit2-sys=0.6.12 \
                    libz-sys=1.0.16 \
                    locale=0.2.2 \
                    matches=0.1.6 \
                    natord=1.0.9 \
                    nom=1.2.4 \
                    num=0.1.39 \
                    num-bigint=0.1.39 \
                    num-complex=0.1.38 \
                    num-integer=0.1.34 \
                    num-iter=0.1.33 \
                    num-rational=0.1.38 \
                    num-traits=0.1.39 \
                    num_cpus=1.6.2 \
                    number_prefix=0.2.7 \
                    pad=0.1.4 \
                    percent-encoding=1.0.0 \
                    pkg-config=0.3.9 \
                    rand=0.3.15 \
                    rustc-serialize=0.3.24 \
                    scoped_threadpool=0.1.7 \
                    term_grid=0.1.5 \
                    unicode-bidi=0.3.3 \
                    unicode-normalization=0.1.5 \
                    unicode-width=0.1.4 \
                    url=1.5.1 \
                    users=0.5.2 \
                    vcpkg=0.2.2 \
                    zoneinfo_compiled=0.2.1 ; do
    dep="$(echo "$dependency" | cut -d= -f1)"
    ver="$(echo "$dependency" | cut -d= -f2)"

    if [ "$dep" = "zoneinfo_compiled" ] ; then
      zoneinfo_srcnam="$(echo "$dep" | tr _ -)"
      zoneinfo_sha1="f56921ea5e9f7cf065b1480ff270a1757c1f742f"
      crate="$CWD/$zoneinfo_srcnam-$zoneinfo_sha1.tar.gz"
      tar xvf "$crate"
      mv "$zoneinfo_srcnam-$zoneinfo_sha1" "$dep-$ver"
    else
      crate="$CWD/$dep-$ver.crate"
      tar xvf "$crate"
    fi

    touch "$dep-$ver/.cargo-ok"

    # generate checksum
    {
      printf "{\n"
      printf '    "files": {\n'

      (
        cd "$dep-$ver"
        find . -type f -print0 | xargs -0 sha256sum | sed -n '/\.cargo-checksum\.json/!p' | sed 's/\.\///;s/^\([^ ]*\)[[:space:]][[:space:]]*\(.*\)$/"\2":"\1",/'
      ) | sed '$ s/,$//'

      printf "    },\n"
      printf '    "package": "'

      sha256sum "$crate" | cut -f1 -d' ' | sed 's/$/"/'

      printf "}\n"
    } | python -c "import sys, json; data = sys.stdin.read(); print json.dumps(json.loads(data), sort_keys=True, indent=4, separators=(',', ' : '))" > "$dep-$ver/.cargo-checksum.json"
  done
)

find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

cargo build --release

mkdir -p $PKG/usr/share/bash-completion/completions/
mkdir -p $PKG/usr/share/zsh/vendor-completions/
mkdir -p $PKG/usr/bin

make install install-bash-completions install-zsh-completions DESTDIR=$PKG PREFIX=/usr

mv $PKG/usr/share/man $PKG/usr

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a LICENCE README.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
