#!/bin/sh
#
# Slackware build script for wine-staging.
#
# Copyright 2016-2017  Edinaldo P. Silva, Rio de Janeiro, Brazil.
# Copyright 2015 Gethyn ThomasQuail <gethyn@bloodbathsoftworks.com>
#
# All rights reserved.
#
# Based on:
# Wine SlackBuild by David Woodfall Copyright 2011
# Some elements from Wine Slackbuilds by Eric Hameleers < alien@slackware.com >
# and PhantomX, Goiania, Brazil < https://github.com/PhantomX >.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=wine-staging
VERSION=${VERSION:-2.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# Default compile options:

  XORG=${XORG:-YES}
  ALSA=${ALSA:-YES}
  OSS=${OSS:-NO}
  PULSE=${PULSE:-YES}
  CUPS=${CUPS:-YES}
  DBUS=${DBUS:-YES}
  GALLIUM=${GALLIUM:-NO}
  OPENAL=${OPENAL:-NO}
  OPENGL=${OPENGL:-YES}
  JPEG=${JPEG:-NO}
  PNG=${PNG:-NO}
  MPG123=${MPG123:-NO}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX=""
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
rm -rf wine-$VERSION
tar xvf $CWD/wine-$VERSION.tar.xz
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz || tar xvf $CWD/v$VERSION.tar.gz

# Apply Staging patches:

cd wine-staging-$VERSION/patches
./patchinstall.sh --all DESTDIR=$TMP/wine-$VERSION

cd $TMP/wine-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Various compile options:

if [ "$XORG" = "YES" ]; then
    do_x="with"
  else
    do_x="without"
fi

if [ "$ALSA" = "YES" ]; then
    do_alsa="with"
  else
    do_alsa="without"
fi

if [ "$OSS" = "YES" ]; then
    do_oss="with"
  else
    do_oss="without"
fi

if [ "$PULSE" = "YES" ]; then
    do_pulse="with"
  else
    do_pulse="without"
fi

if [ "$CUPS" = "YES" ]; then
    do_cups="with"
  else
    do_cups="without"
fi

if [ "$DBUS" = "YES" ]; then
    do_dbus="with"
  else
    do_dbus="without"
fi

if [ "$GALLIUM" = "YES" ]; then
    do_gallium="with"
  else
    do_gallium="without"
fi

if [ "$OPENAL" = "YES" ]; then
    do_openal="with"
  else
    do_openal="without"
fi

if [ "$OPENGL" = "YES" ]; then
    do_opengl="with"
  else
    do_opengl="without"
fi

if [ "$JPEG" = "YES" ]; then
    do_jpeg="with"
  else
    do_jpeg="without"
fi

if [ "$PNG" = "YES" ]; then
    do_png="with"
  else
    do_png="without"
fi

if [ "$MPG123" = "YES" ]; then
    do_mpg123="with"
  else
    do_mpg123="without"
fi

# All of the libraries produced are 32bit libs anyway:

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --mandir=/usr/man \
  --sysconfdir=/etc \
  --with-gnutls=yes \
  --${do_x}-x \
  --x-includes=/usr/include \
  --${do_alsa}-alsa \
  --${do_oss}-oss \
  --${do_pulse}-pulse \
  --${do_cups}-cups \
  --${do_dbus}-dbus \
  --${do_openal}-openal \
  --${do_gallium}-d3dadapter \
  --${do_opengl}-opengl \
  --${do_jpeg}-jpeg \
  --${do_png}-png \
  --${do_mpg123}-mpg123 \
  --with-fontconfig \
  --with-freetype \
  --with-gstreamer \
  --with-xattr \
  --build=$ARCH-slackware-linux

make
make install DESTDIR=$PKG

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

# Add font configuration:
install -d $PKG/etc/fonts/conf.{avail,d}
install -m644 $CWD/30-win32-aliases.conf $PKG/etc/fonts/conf.avail
ln -sf /etc/fonts/conf.avail/30-win32-aliases.conf $PKG/etc/fonts/conf.d/30-win32-aliases.conf

# Add a desktop menu for the wine and winecfg programs:
mkdir -p $PKG/usr/share/{applications,icons/hicolor/scalable/apps,pixmaps}
convert $CWD/wine.svg -scale 64 $PKG/usr/share/pixmaps/wine.png
cp -a $CWD/wine.svg $PKG/usr/share/icons/hicolor/scalable/apps/
convert $CWD/winecfg.png -scale 64 $PKG/usr/share/pixmaps/winecfg.png
cp -a programs/winecfg/winecfg.svg $PKG/usr/share/icons/hicolor/scalable/apps/
cp -a $CWD/winecfg.desktop $PKG/usr/share/applications/

DOCS="ANNOUNCE AUTHORS COPYING.LIB LICENSE* MAINTAINERS README VERSION"

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a $DOCS $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
