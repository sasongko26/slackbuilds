#!/bin/sh

# Slackware build script for qt-creator

# Copyright 2016 Andre Barboza, Belo Horizonte - Brazil
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Updated by Andre Barboza <bmg.andre@gmail.com>
# Code Model updates by Andrzej Telszewski <atelszewski@gmail.com>

# For building -rc or -beta releases, set VERSION to something like:
# VERSION=4.2.0_rc1 or VERSION=4.2.0_beta1 (note the underscore).

PRGNAM=qt-creator
VERSION=${VERSION:-4.3.1}
SRCVER=$(echo $VERSION | tr _ -)
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

CODE_MODEL=${CODE_MODEL:-no}
LLVM_VERSION=${LLVM_VERSION:-3.9.1}
CLANG_VERSION=${CLANG_VERSION:-3.9.1}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$SRCVER
tar xvf $CWD/$PRGNAM-$SRCVER.tar.gz
cd $PRGNAM-$SRCVER

# Unpack LLVM if code model is required
if [ "${CODE_MODEL}" == "yes" ]; then
  tar xvf $CWD/llvm-$LLVM_VERSION.src.tar.xz
  mv llvm-$LLVM_VERSION.src llvm-src
  tar xvf $CWD/cfe-$CLANG_VERSION.src.tar.xz -C llvm-src/tools
  mv llvm-src/tools/cfe-$CLANG_VERSION.src llvm-src/tools/clang
fi

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# LLVM/Clang is used by QTC's Clang Code Model and Clang Static Analyzer.
if [ "${CODE_MODEL}" == "yes" ]; then
  # LLVM/Clang temporary (QTC build-time) install directory.
  LLVM_INSTALL_ROOT=$(pwd)/llvm-install-root

  # Build and temporarily install LLVM/Clang.
  mkdir llvm-src/build
  cd llvm-src/build
    cmake \
      -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
      -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
      -DCMAKE_INSTALL_PREFIX=$LLVM_INSTALL_ROOT \
      -DCMAKE_BUILD_TYPE=Release \
      -G "Unix Makefiles" \
      -DLLVM_ENABLE_RTTI=ON \
      -DLLVM_TARGETS_TO_BUILD="X86" \
      ..
    make
    make install
  cd -
fi

# Adjust QTC docs location.
sed -i "s|share/doc/qtcreator|doc/$PRGNAM-$VERSION|g" qtcreator.pri
sed -i "s|share/doc/qtcreator|doc/$PRGNAM-$VERSION|g" doc/api/qtcreator-documentation.qdoc
sed -i "s|share/doc/qtcreator|doc/$PRGNAM-$VERSION|g" src/plugins/coreplugin/icore.cpp

qmake-qt5 qtcreator.pro \
  QMAKE_CXXFLAGS="$SLKCFLAGS" \
  DEFINES+=QBS_ENABLE_PROJECT_FILE_UPDATES \
  QTC_PREFIX=/usr \
  IDE_LIBRARY_BASENAME=lib$LIBDIRSUFFIX \
  LLVM_INSTALL_DIR=$LLVM_INSTALL_ROOT \
  QBS_INSTALL_DIR=/usr

make
make install INSTALL_ROOT=$PKG
make docs
make install_docs INSTALL_ROOT=$PKG

if [ "${CODE_MODEL}" == "yes" ]; then
  # Install (bundle) LLVM/Clang components needed for running QTC.
  cd $LLVM_INSTALL_ROOT
    mkdir -p $PKG/usr/libexec/qtcreator/clang/bin
    cp -a bin/clang $PKG/usr/libexec/qtcreator/clang/bin
    cp -a bin/$(readlink bin/clang) $PKG/usr/libexec/qtcreator/clang/bin
    mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/qtcreator
    cp -a lib/libclang.so* $PKG/usr/lib$LIBDIRSUFFIX/qtcreator
    mkdir -p $PKG/usr/libexec/qtcreator/clang/lib/clang
    cp -a lib/clang/* $PKG/usr/libexec/qtcreator/clang/lib/clang
  cd -
fi

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/share/mime/packages
cat $CWD/qt-creator.xml > $PKG/usr/share/mime/packages/qt-creator.xml

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a HACKING LICENSE.GPL3-EXCEPT README.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh  > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
