#!/bin/sh

# Slackware build script for cargo-vendor

# Copyright 2017 Andrew Clemons, Wellington New Zealand
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=cargo-vendor
VERSION=${VERSION:-0.1.5}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# build offline
# configuration tells cargo to use the configured directory
# for dependencies intead of downloading from crates.io
mkdir .cargo
cat << EOF >> .cargo/config
[source.crates-io]
registry = 'https://github.com/rust-lang/crates.io-index'
replace-with = 'vendored-sources'

[source.vendored-sources]
directory = '$(pwd)/vendor'
EOF

mkdir vendor
(
  cd vendor

  for dependency in advapi32-sys=0.2.0 \
                    aho-corasick=0.5.3 \
                    bitflags=0.7.0 \
                    cargo=0.16.0 \
                    cfg-if=0.1.0 \
                    cmake=0.1.20 \
                    crates-io=0.5.0 \
                    crossbeam=0.2.10 \
                    curl=0.4.4 \
                    curl-sys=0.3.7 \
                    docopt=0.6.86 \
                    env_logger=0.3.5 \
                    error-chain=0.7.2 \
                    filetime=0.1.10 \
                    flate2=0.2.17 \
                    fs2=0.3.0 \
                    gcc=0.3.43 \
                    gdi32-sys=0.2.0 \
                    git2=0.6.4 \
                    git2-curl=0.7.0 \
                    glob=0.2.11 \
                    idna=0.1.0 \
                    kernel32-sys=0.2.2 \
                    lazy_static=0.2.2 \
                    libc=0.2.20 \
                    libgit2-sys=0.6.6 \
                    libssh2-sys=0.2.5 \
                    libz-sys=1.0.12 \
                    log=0.3.6 \
                    matches=0.1.4 \
                    memchr=0.1.11 \
                    metadeps=1.1.1 \
                    miniz-sys=0.1.9 \
                    miow=0.1.5 \
                    net2=0.2.26 \
                    num_cpus=1.2.1 \
                    openssl=0.9.6 \
                    openssl-probe=0.1.0 \
                    openssl-sys=0.9.6 \
                    pkg-config=0.3.9 \
                    psapi-sys=0.1.0 \
                    rand=0.3.15 \
                    regex=0.1.80 \
                    regex-syntax=0.3.9 \
                    rustc-serialize=0.3.22 \
                    semver=0.5.1 \
                    semver-parser=0.6.2 \
                    strsim=0.5.2 \
                    tar=0.4.10 \
                    tempdir=0.3.5 \
                    term=0.4.4 \
                    thread-id=2.0.0 \
                    thread_local=0.2.7 \
                    toml=0.2.1 \
                    unicode-bidi=0.2.4 \
                    unicode-normalization=0.1.3 \
                    url=1.4.0 \
                    user32-sys=0.2.0 \
                    utf8-ranges=0.1.3 \
                    winapi=0.2.8 \
                    winapi-build=0.1.1 \
                    ws2_32-sys=0.2.1 ; do

    dep="$(echo "$dependency" | cut -d= -f1)"
    ver="$(echo "$dependency" | cut -d= -f2)"

    tar xvf $CWD/$dep-$ver.crate

    mv $dep-$ver $dep

    touch $dep/.cargo-ok
    zcat $CWD/checksums/$dep-cargo-checksum.json.gz > $dep/.cargo-checksum.json
  done
)

cargo build --release

mkdir -p $PKG/usr/bin/

install -m 755 target/release/cargo-vendor $PKG/usr/bin

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a LICENSE-APACHE LICENSE-MIT README.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
