#!/bin/sh

# Slackware build script for cargo-vendor

# Copyright 2017 Andrew Clemons, Wellington New Zealand
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=cargo-vendor
VERSION=${VERSION:-0.1.12}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
  CARGOTARGET="--target i586-unknown-linux-gnu"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
  CARGOTARGET="--target i686-unknown-linux-gnu"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  CARGOTARGET="--target x86_64-unknown-linux-gnu"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
  CARGOTARGET=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION

# build offline
# configuration tells cargo to use the configured directory
# for dependencies intead of downloading from crates.io
mkdir .cargo
cat << EOF >> .cargo/config
[source.crates-io]
registry = 'https://github.com/rust-lang/crates.io-index'
replace-with = 'vendored-sources'

[source.vendored-sources]
directory = '$(pwd)/vendor'
EOF

if [ -e $CWD/$PRGNAM-$VERSION-vendor.tar.gz ] ; then
  tar xvf $CWD/$PRGNAM-$VERSION-vendor.tar.gz
else
  # deps and versions come from Cargo.lock
  mkdir vendor
  (
    cd vendor

    for dependency in advapi32-sys=0.2.0 \
                      aho-corasick=0.6.3 \
                      atty=0.2.2 \
                      backtrace=0.3.3 \
                      backtrace-sys=0.1.12 \
                      bitflags=0.7.0 \
                      bitflags=0.9.1 \
                      cargo=0.21.0 \
                      cfg-if=0.1.2 \
                      cmake=0.1.25 \
                      conv=0.3.3 \
                      crates-io=0.10.0 \
                      crossbeam=0.2.10 \
                      curl=0.4.8 \
                      curl-sys=0.3.14 \
                      custom_derive=0.1.7 \
                      dbghelp-sys=0.2.0 \
                      docopt=0.8.1 \
                      dtoa=0.4.2 \
                      env_logger=0.4.3 \
                      error-chain=0.11.0-rc.2 \
                      filetime=0.1.10 \
                      flate2=0.2.19 \
                      foreign-types=0.2.0 \
                      fs2=0.4.2 \
                      gcc=0.3.53 \
                      git2=0.6.8 \
                      git2-curl=0.7.0 \
                      glob=0.2.11 \
                      hex=0.2.0 \
                      idna=0.1.4 \
                      itoa=0.3.3 \
                      jobserver=0.1.6 \
                      kernel32-sys=0.2.2 \
                      lazy_static=0.2.8 \
                      libc=0.2.30 \
                      libgit2-sys=0.6.14 \
                      libssh2-sys=0.2.6 \
                      libz-sys=1.0.16 \
                      log=0.3.8 \
                      magenta=0.1.1 \
                      magenta-sys=0.1.1 \
                      matches=0.1.6 \
                      memchr=1.0.1 \
                      miniz-sys=0.1.9 \
                      miow=0.2.1 \
                      net2=0.2.31 \
                      num-traits=0.1.40 \
                      num_cpus=1.6.2 \
                      openssl=0.9.17 \
                      openssl-probe=0.1.1 \
                      openssl-sys=0.9.17 \
                      percent-encoding=1.0.0 \
                      pkg-config=0.3.9 \
                      psapi-sys=0.1.0 \
                      quote=0.3.15 \
                      rand=0.3.16 \
                      regex=0.2.2 \
                      regex-syntax=0.4.1 \
                      rustc-demangle=0.1.5 \
                      scoped-tls=0.1.0 \
                      semver=0.7.0 \
                      semver-parser=0.7.0 \
                      serde=1.0.12 \
                      serde_derive=1.0.12 \
                      serde_derive_internals=0.15.1 \
                      serde_ignored=0.0.3 \
                      serde_json=1.0.3 \
                      shell-escape=0.1.3 \
                      socket2=0.2.2 \
                      strsim=0.6.0 \
                      syn=0.11.11 \
                      synom=0.11.3 \
                      tar=0.4.13 \
                      tempdir=0.3.5 \
                      termcolor=0.3.3 \
                      thread_local=0.3.4 \
                      toml=0.4.5 \
                      unicode-bidi=0.3.4 \
                      unicode-normalization=0.1.5 \
                      unicode-xid=0.0.4 \
                      unreachable=1.0.0 \
                      url=1.5.1 \
                      utf8-ranges=1.0.0 \
                      vcpkg=0.2.2 \
                      void=1.0.2 \
                      winapi=0.2.8 \
                      winapi-build=0.1.1 \
                      wincolor=0.1.4 \
                      ws2_32-sys=0.2.1; do
      dep="$(echo "$dependency" | cut -d= -f1)"
      ver="$(echo "$dependency" | cut -d= -f2)"

      tar xvf $CWD/$dep-$ver.crate

      touch $dep-$ver/.cargo-ok

      # generate checksum
      {
        printf "{\n"
        printf '    "files": {\n'

        (
          cd $dep-$ver
          find . -type f -print0 | xargs -0 sha256sum | sed -n '/\.cargo-checksum\.json/!p' | sed 's/\.\///;s/^\([^ ]*\)[[:space:]][[:space:]]*\(.*\)$/"\2":"\1",/'
        ) | sed '$ s/,$//'

        printf "    },\n"
        printf '    "package": "'

        sha256sum "$CWD/$dep-$ver.crate" | cut -f1 -d' ' | sed 's/$/"/'

        printf "}\n"
      } | python -c "import sys, json; data = sys.stdin.read(); print json.dumps(json.loads(data), sort_keys=True, indent=4, separators=(',', ' : '))" > $dep-$ver/.cargo-checksum.json
    done
  )
fi

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

if case "$ARCH" in i?86) true ;; *) false ;; esac ; then
  # error: failed to run custom build command for `openssl-sys v0.9.17`
  # process didn't exit successfully: `/tmp/SBo/cargo-vendor-0.1.12/target/release/build/openssl-sys-1001b6424b340fb9/build-script-build` (exit code: 101)
  # --- stdout
  # cargo:rerun-if-env-changed=OPENSSL_LIB_DIR
  # cargo:rerun-if-env-changed=OPENSSL_INCLUDE_DIR
  # cargo:rerun-if-env-changed=OPENSSL_DIR
  # run pkg_config fail: "Cross compilation detected. Use PKG_CONFIG_ALLOW_CROSS=1 to override"
  export PKG_CONFIG_ALLOW_CROSS=1
fi

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
cargo build --release $CARGOTARGET

mkdir -p $PKG/usr/bin/

find target -name cargo-vendor -exec install -m 755 {} $PKG/usr/bin/cargo-vendor \;

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a LICENSE-APACHE LICENSE-MIT README.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
