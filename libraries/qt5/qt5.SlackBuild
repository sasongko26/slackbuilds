#!/bin/sh

# Slackware build script for qt5

# Copyright 2013-2017 Larry Hajali <larryhaja[at]gmail[dot]com>
# Copyright 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Merged some ideas from Alex Sarmardzic's script for qt4 at SlackBuilds.org
# ^^ Modified by Robby Workman <rworkman@slackware.com> for QT4 & KDE4

# We're using qt-copy instead of a released qt version, as this git release
# has at least one bugfix strongly recommended by the kde developers.

# Obtained from:
# git clone git://gitorious.org/+kde-developers/qt/kde-qt.git
# git checkout origin/4.5.3-patched
# git checkout origin/4.6.0-stable-patched
# git checkout origin/4.6.1-patched
# git checkout origin/4.7.0-patched
#
# Alternate method (we don't use this):
# wget http://qt.gitorious.org/qt/kde-qt/archive-tarball/4.6.2-patched
#
# Modifications 2010, 2011, 2012  Eric Hameleers, Eindhoven, NL
# qt 4.7.3, 4.7.4, 4.8.0, 4.8.1, 4.8.2, 4.8.4 are built from original nokia sources.

# This is the highly modified version qt.SlackBuild found in Slackware
# tailored to Qt 5. Modified by Larry Hajali.

# Adapted for Qt >= 5.9.6 by Dave Woodfall <dave@slackbuilds.org>
# Some parts thanks to alienBOB's qt5 SlackBuild.

PRGNAM=qt5
SRCNAM=${PRGNAM%%[[:digit:]]*}
VERSION=${VERSION:-5.12.8}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

EXAMPLES=${EXAMPLES:-no}
DOCS=${DOCS:-no}
PROPRIETARY_CODECS=${PROPRIETARY_CODECS:-no}
PULSEAUDIO=${PULSEAUDIO:-yes}
CCACHE=${CCACHE:-no}
WEBENGINE=${WEBENGINE:-yes}
LDGOLD=${LDGOLD:-no}

[ "$EXAMPLES"    =  "no" ] && BUILD_EXAMPLES="-nomake examples"
[ "$PULSEAUDIO"  =  "no" ] && PULSE="-no-pulseaudio"
[ "$CCACHE"      = "yes" ] && USE_CCACHE="-ccache"
[ "$LDGOLD"      =  "no" ] && USE_LDGOLD="-no-use-gold-linker"

if [ "$WEBENGINE" = "no" ]; then
  EXCLUDE="--exclude=qtwebengine"
  PKGVERSION="${VERSION}_nowebengine"
else
  PKGVERSION="${VERSION}"
  if [ "$PROPRIETARY_CODECS" = "yes" ]; then
    CODECS="-webengine-proprietary-codecs"
  fi
fi

printf "\n%s\n\n" "SlackBuild Options:"
printf "%s\n" "CCACHE:             $CCACHE"
printf "%s\n" "DOCS:               $DOCS"
printf "%s\n" "EXAMPLES:           $EXAMPLES"
printf "%s\n" "PROPRIETARY_CODECS: $PROPRIETARY_CODECS"
printf "%s\n" "PULSEAUDIO:         $PULSEAUDIO"
printf "%s\n" "WEBENGINE:          $WEBENGINE"
printf "%s\n" "LDGOLD:             $LDGOLD"
printf "\n"

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  SLKLDFLAGS="-L/usr/lib64"
elif [ "$ARCH" = "armv7hl" ]; then
  # To prevent "qatomic_armv6.h error: output number 2 not directly addressable"
  # More permanent solution is to patch gcc:
  # http://bazaar.launchpad.net/~linaro-toolchain-dev/gcc-linaro/4.6/revision/106731
  SLKCFLAGS="-O2 -march=armv7-a -mfpu=vfpv3-d16 -fno-strict-volatile-bitfields"
  LIBDIRSUFFIX=""
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

if [ -e /var/log/packages/$PRGNAM-legacy-[[:digit:]]* ]; then
  printf "%s\n%s\n%s\n" "You appear to have $PRGNAM-legacy installed." \
    "$PRGNAM will not co-exist with $PRGNAM-legacy." \
    "Please uninstall $PRGNAM-legacy and restart the SlackBuild."
  exit 1
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
echo "Removing any existing source directory. Please wait..."
rm -rf $SRCNAM-everywhere-src-$VERSION
tar xvf $CWD/$SRCNAM-everywhere-src-$VERSION.tar.xz $EXCLUDE
cd $SRCNAM-everywhere-src-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

# Limit -reduce-relocations to ix86 and x86_64.
# https://bugreports.qt-project.org/browse/QTBUG-36129
if echo $ARCH | grep -q '\(i.86\|x86_64\)' 2>/dev/null; then
  RELOCATIONS="-reduce-relocations"
else
  RELOCATIONS=""
fi

# Fix path to mysql header:
cat $CWD/patches/qt5.mysql.h.diff | patch -p1 --verbose

# CMake generates wrong -isystem /usr/include compilations flags with Qt5::Gui
# and for it breaks KWin compilation with:
# /usr/include/c++/9.1.0/cstdlib:75:15: fatal error: stdlib.h: No such file or directory
# See also https://bugzilla.redhat.com/1704474
cd qtbase
  cat $CWD/patches/qt5.qtbase_cmake_isystem_includes.patch \
    | patch -p1 --verbose || exit 1
cd - 1>/dev/null

# Use our custom compiler and linker flags:
sed -e "s|^\(QMAKE_CFLAGS_RELEASE.*\)|\1 ${SLKCFLAGS}|" \
  -i qtbase/mkspecs/common/gcc-base.conf || exit 1
sed -e "s|^\(QMAKE_LFLAGS_RELEASE.*\)|\1 ${SLKLDFLAGS}|" \
  -i qtbase/mkspecs/common/g++-unix.conf || exit 1

export CFLAGS="$SLKCFLAGS"
export CXXFLAGS="$SLKCFLAGS"
export OPENSOURCE_CXXFLAGS="$SLKCFLAGS"
export QTDIR="${TMP}/qt-everywhere-src-$VERSION"
export LD_LIBRARY_PATH="${QTDIR}/qtbase/lib:${QTDIR}/qttools/lib:${LD_LIBRARY_PATH}"
export QT_PLUGIN_PATH="${QTDIR}/qtbase/plugins"

./configure -v \
  -confirm-license \
  -opensource \
  -prefix "/usr/lib${LIBDIRSUFFIX}/$PRGNAM" \
  -sysconfdir "/etc/xdg" \
  -headerdir "/usr/include/$PRGNAM" \
  -libdir "/usr/lib${LIBDIRSUFFIX}" \
  -docdir "/usr/doc/$PRGNAM-$VERSION" \
  -examplesdir "/usr/doc/$PRGNAM-$VERSION/examples" \
  -system-libpng \
  -system-libjpeg \
  -system-zlib \
  -system-sqlite \
  -plugin-sql-sqlite \
  -icu \
  -openssl-linked \
  -verbose \
  -dbus-linked \
  -qpa xcb \
  -xcb \
  -glib \
  -accessibility \
  -no-separate-debug-info \
  -no-pch \
  -no-rpath \
  -no-strip \
  -release \
  $USE_CCACHE \
  $CODECS \
  $PULSE \
  $RELOCATIONS \
  $BUILD_EXAMPLES \
  $USE_LDGOLD

make || make -j1
make install INSTALL_ROOT=$PKG

# Install documentation. Default is not to install documentation.
if [ "$DOCS" = "yes" ]; then
  # Recreate Makefiles in order to use the just compiled qdoc.
  for doc in $(find . -name "Makefile*" \
    | xargs egrep "^\s/usr/lib${LIBDIRSUFFIX}/qt5/bin/" | cut -d':' -f1 \
    | uniq); do
    rm -fv $doc
  done
  make docs
  make install_docs INSTALL_ROOT=$PKG
fi

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/bin
for BIN in $PKG/usr/lib${LIBDIRSUFFIX}/$PRGNAM/bin/*; do
  TMP_FILE=$(echo $BIN | sed -e "s|$PKG||")
  case $(basename $BIN) in
    syncqt.pl|fixqt4headers.pl)
      ln -s $TMP_FILE $PKG/usr/bin/$(basename $BIN)
      ;;
    *)
      ln -s $TMP_FILE $PKG/usr/bin/$(basename $BIN)-$PRGNAM
      ;;
  esac
done

# Create Environment variables
mkdir -p $PKG/etc/profile.d
sed -e "s|@LIBDIRSUFFIX@|${LIBDIRSUFFIX}|g" $CWD/profile.d/$PRGNAM.sh \
  > $PKG/etc/profile.d/$PRGNAM.sh
sed -e "s|@LIBDIRSUFFIX@|${LIBDIRSUFFIX}|g" $CWD/profile.d/$PRGNAM.csh \
  > $PKG/etc/profile.d/$PRGNAM.csh
chmod 0755 $PKG/etc/profile.d/*

cat > $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig/Qt5.pc << EOF
prefix=/usr/lib${LIBDIRSUFFIX}/$PRGNAM
bindir=\${prefix}/bin
datadir=\${prefix}
docdir=/usr/doc/$PRGNAM-$VERSION
archdatadir=\${prefix}
examplesdir=\${prefix}/examples
headerdir=/usr/include/$PRGNAM
importdir=\${prefix}/imports
qmldir=\${prefix}/qml
libdir=/usr/lib${LIBDIRSUFFIX}
libexec=\${prefix}/libexec
moc=\${bindir}/moc
plugindir=\${prefix}/plugins
qmake=\${bindir}/qmake
sysconfdir=/etc/xdg
translationdir=\${prefix}/translations

Name: Qt5
Description: Qt5 Configuration
Version: $VERSION
EOF

# Fix the path in prl files:
find "$PKG/usr/lib${LIBDIRSUFFIX}" -type f -name '*.prl' \
  -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;

# One more for the road.
sed -i "s|$PWD/qtbase|/usr/lib${LIBDIRSUFFIX}/$PRGNAM|" \
  $PKG/usr/lib${LIBDIRSUFFIX}/$PRGNAM/mkspecs/modules/qt_lib_bootstrap_private.pri

for i in $CWD/desktop/*.desktop; do
  install -D -m 0644 $i $PKG/usr/share/applications/$(basename $i)
done
sed -i "s|@LIBDIR@|$LIBDIRSUFFIX|" $PKG/usr/share/applications/*

install -D -m 0644 qttools/src/assistant/assistant/images/assistant-128.png \
  $PKG/usr/share/icons/hicolor/128x128/apps/assistant-qt5.png
install -D -m 0644 qttools/src/designer/src/designer/images/designer.png \
  $PKG/usr/share/icons/hicolor/128x128/apps/designer-qt5.png
install -D -m 0644 qttools/src/qdbus/qdbusviewer/images/qdbusviewer-128.png \
  $PKG/usr/share/icons/hicolor/128x128/apps/qdbusviewer-qt5.png
for i in 16 32 48 64 128; do
  install -D -m 0644 qttools/src/linguist/linguist/images/icons/linguist-${i}-32.png \
    $PKG/usr/share/icons/hicolor/${i}x${i}/apps/linguist-qt5.png
done

# Remove executable bits from files.
find $PKG \( -name "*.qml" -o -name "*.app" \) -perm 755 -exec chmod 644 '{}' \;

# Add missing version info
sed -i "s,set(PACKAGE_VERSION ),set(PACKAGE_VERSION $VERSION)," \
   $PKG/usr/lib$LIBDIRSUFFIX/cmake/Qt5/Qt5ConfigVersion.cmake

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  README qtbase/{header*,LICENSE*} \
  $CWD/README.ccache \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$PKGVERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
